---
import Layout from "../../layouts/Layout.astro";
import Navbar from "../../components/Navbar.astro";
import Footer from "../../components/Footer.astro";
import Button from "../../components/ui/Button.astro";
import FeaturesTabs from "../../components/react/FeaturesTabs";
import { Image } from "astro:assets";
import "../_index.css";
import Subscribe from "../../components/Subscribe.astro";
import Switcher from "../../components/Switcher.astro";
import PriceCardsData from "../../components/react/PriceCards";
import EvaluatePriceTabs from "../../components/react/EvaluatePriceTabs";
import { m } from "../../paraglide/messages.js";
---

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
          }
        });
      },
      {
        threshold: 0.1,
      }
    );

    const cards = document.querySelectorAll(".animate-appear");
    cards.forEach((card) => observer.observe(card));
  });
</script>

<script>
  function handlePriceChange(event: CustomEvent) {
    const monthlyPrices = document.querySelectorAll(".monthly-price");
    const annualPrices = document.querySelectorAll(".annual-price");
    const yearlyPriceContainer = document.querySelectorAll(".yearly-price");
    const freeTierContainer = document.querySelectorAll(".free-tier");

    if (event.detail.period === "annual") {
      monthlyPrices.forEach((price) => price.classList.add("hidden"));
      annualPrices.forEach((price) => price.classList.remove("hidden"));
      yearlyPriceContainer.forEach((price) => price.classList.remove("hidden"));
      freeTierContainer.forEach((container) =>
        container.classList.remove("mb-[44px]")
      );
      freeTierContainer.forEach((container) =>
        container.classList.add("mb-[120px]")
      );
    } else {
      monthlyPrices.forEach((price) => price.classList.remove("hidden"));
      annualPrices.forEach((price) => price.classList.add("hidden"));
      yearlyPriceContainer.forEach((price) => price.classList.add("hidden"));
      freeTierContainer.forEach((container) =>
        container.classList.remove("mb-[120px]")
      );
      freeTierContainer.forEach((container) =>
        container.classList.add("mb-[44px]")
      );
    }
  }

  document.addEventListener(
    "pricingPeriodChange",
    handlePriceChange as EventListener
  );
</script>

<Layout title="Pricing - iON">
  <Navbar />
  <main class="relative">
    <section class="mt-40 pb-32 px-4 lg:px-12">
      <div class="flex flex-col items-center text-center gap-8">
        <div
          class="flex text-[62px] flex-wrap font-semibold flex-row justify-center gap-6"
        >
          <span>{m["pricing.title.part1"]()}</span>
          <Image src="/ion.svg" alt="features" width={133} height={64} />
          <span>{m["pricing.title.part2"]()}</span>
        </div>
        <div class="text-xl flex flex-col">
          <span>{m["pricing.subtitle.part1"]()}</span>
          <span>{m["pricing.subtitle.part2"]()}</span>
        </div>
        <a href="https://app.ionkol.com/sign-up">
          <Button text={m["pricing.tryReport"]()} className="w-[345px]" />
        </a>
      </div>
    </section>

    <section class="py-20 px-4 lg:px-12">
      <div class="flex flex-col items-center space-y-14">
        <h2 class="text-center text-5xl font-extrabold">
          <span class="text-[#EE7380]">{m["pricing.subscription.title"]()}</span
          >
        </h2>

        <div class="flex flex-col items-center space-y-14">
          <Switcher />

          <!-- Pricing cards -->
          <div
            class="animate-appear grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 gap-8 w-full"
          >
            <PriceCardsData client:load />
          </div>
          <a href="https://app.ionkol.com/sign-up">
            <Button text={m["pricing.discoverMore"]()} />
          </a>
        </div>
      </div>
    </section>

    <section class="py-20 px-4 lg:px-12 relative">
      <div
        class="absolute rotate-180 rounded-[100%] w-full h-screen top-0 left-0 z-100"
        style="background: linear-gradient(180deg, #FFFFFF 60.5%, #FFF9F9 100%);"
      >
      </div>
      <div class="flex flex-col items-center text-center gap-8">
        <div
          class="flex text-[62px] relative flex-wrap font-semibold flex-row justify-center gap-6"
        >
          <span>{m["pricing.evaluate.title.part1"]()}</span>
          <Image src="/ion.svg" alt="features" width={133} height={64} />
          <span>{m["pricing.evaluate.title.part2"]()}</span>
        </div>
        <EvaluatePriceTabs client:load />
      </div>
    </section>

    <Subscribe />
  </main>
</Layout>
<Footer />
